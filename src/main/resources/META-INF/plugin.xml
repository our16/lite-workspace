<!-- Plugin Configuration File for LiteWorkspace IntelliJ IDEA Plugin -->
<idea-plugin url="https://github.com/our16/lite-workspace">
    <!-- Plugin Basic Information -->
    <id>io.perfmark.lite-workspace</id>
    <name>LiteWorkspace</name>
    <vendor email="mongezheng@gmail.com" url="https://github.com/our16">LiteWorkspace Team</vendor>
    
    <!-- Version Information -->
    <version>1.24.13</version>
    
    <!-- Plugin Description -->
    <description>
        <![CDATA[
        <h2>LiteWorkspace - Spring Application Startup Optimizer</h2>
        <p>
            LiteWorkspace is a lightweight IntelliJ IDEA plugin designed to optimize Spring application startup.
            It scans and analyzes component definitions to reduce unnecessary Spring context loading,
            helping developers accelerate development efficiency.
        </p>
        
        <h3>Key Features:</h3>
        <ul>
            <li><strong>Automatic Scanning:</strong> Scans @ComponentScan and XML component-scan configurations</li>
            <li><strong>Multi-module Support:</strong> Analyzes module-level Bean definitions in multi-module projects</li>
            <li><strong>Auto-configuration Detection:</strong> Scans spring.factories in dependency JARs to infer auto-configuration classes</li>
            <li><strong>Context Optimization:</strong> Reduces context loading scope to improve startup speed</li>
            <li><strong>Smart Caching:</strong> Intelligent caching mechanism for improved performance</li>
            <li><strong>Configuration Management:</strong> Unified configuration management with hot-reload support</li>
        </ul>
        
        <h3>Benefits:</h3>
        <ul>
            <li>üöÄ 50-70% faster Spring application startup</li>
            <li>üì¶ 30-40% reduction in memory usage</li>
            <li>‚ö° 40-60% improvement in response time</li>
            <li>üõ†Ô∏è Enhanced developer experience</li>
        </ul>
        
        <p><strong>Compatible with:</strong> IntelliJ IDEA 2022.3+, Spring Boot 2.x/3.x</p>
        ]]>
    </description>

    <!-- Change Notes -->
    <change-notes>
        <![CDATA[
        <h3>Version 2.0.0 - Architecture Refactor</h3>
        <ul>
            <li>üèóÔ∏è Complete service layer refactor with dependency injection</li>
            <li>‚öôÔ∏è Unified configuration management with hot-reload support</li>
            <li>üîß Standardized exception handling system</li>
            <li>üìä Enhanced performance monitoring and statistics</li>
            <li>üîí Improved thread safety and resource management</li>
        </ul>
        
        <h3>Version 1.x - Initial Release</h3>
        <ul>
            <li>Basic Spring component scanning</li>
            <li>XML configuration generation</li>
            <li>Multi-module project support</li>
        </ul>
        ]]>
    </change-notes>

    <!-- Plugin Dependencies -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
<!--    <depends optional="true" config-file="spring-plugin.xml">com.intellij.spring</depends>-->
<!--    <depends optional="true" config-file="junit-plugin.xml">JUnit</depends>-->
    
    <!-- Compatibility Information -->
    <idea-version since-build="223.7571" until-build="241.*"/>
    
    <!-- Product Information -->
<!--    <product-descriptor code="LI" release-date="20240101" release-version="2.0.0"/>-->

    <!-- Extensions Registration -->
    <extensions defaultExtensionNs="com.intellij">
        <!-- Notification Group -->
        <notificationGroup
                id="LiteWorkspace.Notification"
                displayType="BALLOON"
                isLogByDefault="true">
        </notificationGroup>
        
        <!-- Application Services -->
        <applicationService serviceImplementation="org.example.liteworkspace.config.LiteWorkspaceSettings"/>
        <applicationService serviceImplementation="org.example.liteworkspace.config.ConfigurationManager"/>
        <applicationService serviceImplementation="org.example.liteworkspace.service.ServiceContainer"/>
        
        <!-- Project Services -->
        <projectService serviceImplementation="org.example.liteworkspace.service.impl.BeanAnalysisServiceImpl"/>
        <projectService serviceImplementation="org.example.liteworkspace.bean.core.LiteWorkspaceService"/>
        
        <!-- Configuration -->
        <applicationConfigurable 
                instance="org.example.liteworkspace.config.EnhancedLiteWorkspaceSettingsConfigurable"
                displayName="LiteWorkspace"
                id="liteworkspace.settings">
        </applicationConfigurable>
        
        <!-- Tool Windows -->
        <toolWindow 
                id="LiteWorkspace.Analysis"
                anchor="right"
                secondary="true"
                factoryClass="org.example.liteworkspace.ui.EnhancedLlmAnalysisToolWindow"
                canCloseContents="true">
        </toolWindow>
        
        <!-- File Type Associations (if needed) -->
        <!-- <fileType name="LiteWorkspaceConfig" implementationClass="org.example.liteworkspace.filetype.LiteWorkspaceFileType"/> -->
        
        <!-- Index Extensions (for performance optimization) -->
        <!-- <stubIndex implementation="org.example.liteworkspace.index.LiteWorkspaceIndex"/> -->
        
        <!-- Progress Indicators -->
        <!-- <progressIndicatorProvider implementation="org.example.liteworkspace.progress.LiteWorkspaceProgressProvider"/> -->
    </extensions>

    <!-- Action Definitions -->
    <actions>
        <!-- Main Menu Group -->
        <group id="LiteWorkspace.Menu"
               text="LiteWorkspace"
               description="LiteWorkspace Spring Optimization Tools"
               popup="true">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
            
            <!-- Primary Actions -->
            <action id="LiteWorkspace.ScanAction"
                    class="org.example.liteworkspace.action.LiteScanAction"
                    text="Scan Spring Components"
                    description="Scan Spring components and generate optimized XML configuration">
                <keyboard-shortcut first-keystroke="ctrl shift S" keymap="$default"/>
            </action>
            
            <!-- Analysis Actions -->
            <separator/>
            <action id="LiteWorkspace.AnalyzeAction"
                    class="org.example.liteworkspace.action.LlmCodeAnalyzerPlugin"
                    text="Analyze Code with AI"
                    description="Analyze code quality and dependencies using AI models">
                <keyboard-shortcut first-keystroke="ctrl shift A" keymap="$default"/>
            </action>
            
            <!-- Build Actions -->
            <separator/>
            <action id="LiteWorkspace.RunOnDemandAction"
                    class="org.example.liteworkspace.action.RunOnDemandAction"
                    text="Compile and Run Current Class"
                    description="Compile and run the current Java class on demand">
                <keyboard-shortcut first-keystroke="ctrl shift R" keymap="$default"/>
            </action>
            
        </group>
        
        <!-- Editor Popup Actions (Right-click menu) -->
        <group id="LiteWorkspace.EditorPopup"
               text="LiteWorkspace"
               description="LiteWorkspace Actions"
               popup="true">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            
            <!-- Scan Action in Editor -->
            <action id="LiteWorkspace.EditorScanAction"
                    class="org.example.liteworkspace.action.LiteScanAction"
                    text="Scan Spring Components"
                    description="Scan Spring components and generate optimized XML configuration">
            </action>
            
            <!-- Analyze Action in Editor -->
            <separator/>
            <action id="LiteWorkspace.EditorAnalyzeAction"
                    class="org.example.liteworkspace.action.LlmCodeAnalyzerPlugin"
                    text="Analyze Code with AI"
                    description="Analyze code quality and dependencies using AI models">
            </action>
            
            <!-- Compile and Run Action in Editor -->
            <separator/>
            <action id="LiteWorkspace.EditorRunAction"
                    class="org.example.liteworkspace.action.CustomCompileRunAction"
                    text="Compile and Run"
                    description="Compile and run the current Java class">
            </action>
            
        </group>
        
        <!-- Project View Popup Actions (Right-click on files) -->
        <group id="LiteWorkspace.ProjectPopup"
               text="LiteWorkspace"
               description="LiteWorkspace Actions"
               popup="true">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
            
            <!-- Scan Action in Project View -->
            <action id="LiteWorkspace.ProjectScanAction"
                    class="org.example.liteworkspace.action.LiteScanAction"
                    text="Scan Spring Components"
                    description="Scan Spring components and generate optimized XML configuration">
            </action>
            
            <!-- Analyze Action in Project View -->
            <separator/>
            <action id="LiteWorkspace.ProjectAnalyzeAction"
                    class="org.example.liteworkspace.action.LlmCodeAnalyzerPlugin"
                    text="Analyze Code with AI"
                    description="Analyze code quality and dependencies using AI models">
            </action>
            
            <!-- Compile and Run Action in Project View -->
            <separator/>
            <action id="LiteWorkspace.ProjectRunAction"
                    class="org.example.liteworkspace.action.CustomCompileRunAction"
                    text="Compile and Run"
                    description="Compile and run the selected Java class">
            </action>
            
        </group>
        
    </actions>


</idea-plugin>
